apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-db
  labels:
    app: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-db
  serviceName: {{ .Chart.Name }}-db-headless
  replicas: {{ .Values.db.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-db
    spec:
      containers:
      - name: {{ .Chart.Name }}-db
        image: {{ .Values.db.image }}
        ports:
          - containerPort: {{ .Values.db.port }}
            name: {{ .Chart.Name }}-db
        env:
          - name: POSTGRES_DB
            value: {{ .Values.db.defaultDatabase | quote }}
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: "{{ .Chart.Name }}-db-credentials"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: "{{ .Chart.Name }}-db-credentials"
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
        volumeMounts:
          - name: {{ .Chart.Name }}-db-data
            mountPath: /var/lib/postgresql
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP -U postgres -d postgres
          failureThreshold: 10
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP -U postgres -d postgres
          failureThreshold: 10
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
      serviceAccountName: {{ .Chart.Name }}
      {{- if .Values.db.nodeSelector }}
      nodeSelector: {{ toYaml .Values.db.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.db.podSecurityContext }}
      securityContext: {{ toYaml .Values.db.podSecurityContext | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Chart.Name }}-db-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.db.storage.class }}
        resources:
          requests:
            storage: {{ .Values.db.storage.size }}
