<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.epam.digital.data.platform</groupId>
    <artifactId>ddm-bpm-parent</artifactId>
    <version>1.5.5-SNAPSHOT</version>
  </parent>

  <artifactId>ddm-bpm</artifactId>

  <properties>
    <camunda.bpm.assert.version>7.0.0</camunda.bpm.assert.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-bpm-security</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-bpm-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-bpm-engine</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-bpm-extension</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-bpm-data-accessor</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-bpm-rest</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-bpm-history-event-handler</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!--Spring Boot dependencies-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-starter-actuator</artifactId>
      <version>${ddm-starter-actuator.version}</version>
    </dependency>
    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-starter-juel-function</artifactId>
      <version>${ddm-starter-juel-function.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-sleuth</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-zipkin</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentracing.brave</groupId>
      <artifactId>brave-opentracing</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
    </dependency>
    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-starter-localization</artifactId>
      <version>${ddm-starter-localization.version}</version>
    </dependency>

    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-starter-trembita-integration</artifactId>
      <version>${ddm-starter-trembita-integration.version}</version>
    </dependency>

    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>excerpt-model</artifactId>
      <version>${excerpt-model.version}</version>
    </dependency>

    <dependency>
      <artifactId>spring-cloud-starter-kubernetes-config</artifactId>
      <groupId>org.springframework.cloud</groupId>
    </dependency>

    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
    </dependency>

    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-starter-logger</artifactId>
      <version>${ddm-starter-logging.version}</version>
    </dependency>

    <!--Camunda dependencies-->
    <dependency>
      <groupId>org.camunda.bpm.springboot</groupId>
      <artifactId>camunda-bpm-spring-boot-starter-rest</artifactId>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-plugin-connect</artifactId>
    </dependency>
    <dependency>
      <groupId>org.camunda.connect</groupId>
      <artifactId>camunda-connect-http-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-plugin-spin</artifactId>
    </dependency>
    <dependency>
      <groupId>org.camunda.spin</groupId>
      <artifactId>camunda-spin-dataformat-json-jackson</artifactId>
      <exclusions>
        <exclusion>
          <groupId>net.minidev</groupId>
          <artifactId>json-smart</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy</artifactId>
      <version>${groovy.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-datetime</artifactId>
      <version>${groovy.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-json</artifactId>
      <version>${groovy.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-jsr223</artifactId>
      <version>${groovy.version}</version>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>

    <!-- After releasing Spring sleuth 3.1.0 this can be replaced by direct p6spy dependency -->
    <dependency>
      <groupId>com.github.gavlyukovskiy</groupId>
      <artifactId>p6spy-spring-boot-starter</artifactId>
      <version>${p6spy-spring-boot-starter.version}</version>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.assert</groupId>
      <artifactId>camunda-bpm-assert</artifactId>
      <version>${camunda.bpm.assert.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <configuration>
              <sources>
                <source>target/generated-sources</source>
              </sources>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>docker-resources</id>
                <phase>validate</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>target/</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/docker/</directory>
                      <filtering>false</filtering>
                      <excludes>
                        <exclude>**/*.yml</exclude>
                      </excludes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <version>1.4.10</version>
            <executions>
              <execution>
                <id>build</id>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <tag>${project.version}</tag>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <repository>low-code/bpms</repository>
              <buildArgs>
                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
              </buildArgs>
              <contextDirectory>${project.build.directory}</contextDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>local</id>
      <dependencies>
        <dependency>
          <artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId>
          <groupId>org.camunda.bpm.springboot</groupId>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.22.2</version>
            <configuration>
              <argLine>@{argLine} -Dspring.profiles.active=local</argLine>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.22.2</version>
            <configuration>
              <argLine>@{argLine} -Dspring.profiles.active=local</argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
